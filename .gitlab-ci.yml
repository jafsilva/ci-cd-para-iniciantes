workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE =~ /web|merge_request_event/'

image: alpine/azure_cli:1.5.6

variables:
  AZURE_RESOURCE_GROUP: "$CI_PROJECT_NAMESPACE"
  AZURE_ACR_NAME: "$CI_PROJECT_NAMESPACE"
  AZURE_ENVIRONMENT: "$CI_PROJECT_NAMESPACE"
  IMAGE_NAME: "$CI_PROJECT_PATH"
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"

.login: &login
  - |
    if az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID --output none; then
      echo "Azure Login OK"
    else
      echo "Erro no Azure Login" >&2
      exit 1
    fi

confi_azure:
  stage: .pre
  script:
    - *login
    - |
      #
      echo "Verificando se o ACR existe..."
      if az acr show --name "$AZURE_ACR_NAME" --resource-group "$AZURE_RESOURCE_GROUP" >/dev/null 2>&1; then
        echo "ACR $AZURE_ACR_NAME existe."
      else
        echo "ACR $AZURE_ACR_NAME não existe. Criando..."
        az acr create --name "$AZURE_ACR_NAME" --resource-group "$AZURE_RESOURCE_GROUP" --sku "basic"
        az acr update -n $AZURE_ACR_NAME --admin-enabled true
      fi
      echo "Verificando se Ambiente de Container existe..."
      if az containerapp env show --name $AZURE_ENVIRONMENT --resource-group $AZURE_RESOURCE_GROUP --query "name" --output tsv >/dev/null 2>&1; then
        echo "O ambiente $AZURE_ENVIRONMENT já existe."
      else
        echo "Criando o ambiente $AZURE_ENVIRONMENT..."
        az containerapp env create \
          --name $AZURE_ENVIRONMENT \
          --resource-group $AZURE_RESOURCE_GROUP \
          --location brazilsouth
      fi

package:
  stage: build
  image: eclipse-temurin:21-jdk-alpine
  needs: []
  script:
    - ./mvnw clean package
  artifacts:
    paths:
      - target/
    expire_in: 1h
    reports:
      junit: target/surefire-reports/*.xml
  allow_failure: false

image_build:
  stage: deploy
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache docker npm
    - *login
    - az acr login --name $CI_PROJECT_NAMESPACE

  script:
    - docker build -t $AZURE_ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG .
    - docker push $AZURE_ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG

deploy:
  stage: deploy
  needs: [image_build]
  before_script:
    - *login
    # Verifica se o ambiente já existe
  script:
    - |
      # Verificando se o Container App já existe...
      ACR_CREDENTIALS=$(az acr credential show -n $AZURE_ACR_NAME --query "[username,passwords[0].value]" -o tsv)
      ACR_USERNAME=$(echo $ACR_CREDENTIALS | awk '{print $1}')
      ACR_PASSWORD=$(echo $ACR_CREDENTIALS | awk '{print $2}')

      if az containerapp show -n $CI_PROJECT_NAME -g $AZURE_RESOURCE_GROUP --query "name" --output tsv >/dev/null 2>&1; then
        echo "Atualizando Container App $CI_PROJECT_NAME..."
        az containerapp update -n $CI_PROJECT_NAME -g $AZURE_RESOURCE_GROUP \
          --image $AZURE_ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG
      else
        echo "Criando Container App $CI_PROJECT_NAME..."
        az containerapp create -n $CI_PROJECT_NAME -g $AZURE_RESOURCE_GROUP \
          --image $AZURE_ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG --environment $AZURE_ENVIRONMENT \
          --ingress external --target-port 8080 \
          --registry-server $AZURE_ACR_NAME.azurecr.io \
          --registry-username $ACR_USERNAME \
          --registry-password $ACR_PASSWORD \
          --cpu 0.25 --memory 0.5Gi \
          --min-replicas 1 --max-replicas 4
      fi
      
cleanup:
  stage: .post
  when: manual
  script:
    - *login
    - |
      echo "Removendo Container App..."
      if az containerapp show -n $CI_PROJECT_NAME -g $AZURE_RESOURCE_GROUP --query "name" --output tsv >/dev/null 2>&1; then
        az containerapp delete -n $CI_PROJECT_NAME -g $AZURE_RESOURCE_GROUP --yes
        echo "Container App $CI_PROJECT_NAME removido."
      else
        echo "Container App $CI_PROJECT_NAME não existe."
      fi
    - |
      echo "Removendo Container App Environment..."
      if az containerapp env show -n $AZURE_ENVIRONMENT -g $AZURE_RESOURCE_GROUP --query "name" --output tsv >/dev/null 2>&1; then
        az containerapp env delete -n $AZURE_ENVIRONMENT -g $AZURE_RESOURCE_GROUP --yes
        echo "Container App Environment $AZURE_ENVIRONMENT removido."
      else
        echo "Container App Environment $AZURE_ENVIRONMENT não existe."
      fi
    - |
      echo "Removendo Azure Container Registry (ACR)..."
      if az acr show -n $AZURE_ACR_NAME -g $AZURE_RESOURCE_GROUP --query "name" --output tsv >/dev/null 2>&1; then
        az acr delete -n $AZURE_ACR_NAME -g $AZURE_RESOURCE_GROUP --yes
        echo "ACR $AZURE_ACR_NAME removido."
      else
        echo "ACR $AZURE_ACR_NAME não existe."
      fi